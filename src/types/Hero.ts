// üìÑ src/types/Hero.ts

import { ArmyUnit } from './Army';

export interface HeroBonus {
  attack?: number;
  defense?: number;
  armor?: number;
  hp?: number;
  capacity?: number;
  speed?: number;
}

export interface HeroInventoryItem {
  itemId: string; // ID –≤–µ—â–∏ (—Å–≤—è–∑—å —Å –±–∞–∑–æ–π)
  name?: string;
  type?: string;  // weapon, armor, artifact –∏ —Ç.–¥.
  bonuses?: HeroBonus; // –ë–æ–Ω—É—Å—ã –æ—Ç –ø—Ä–µ–¥–º–µ—Ç–∞
  // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –µ—â—ë —ç—Ñ—Ñ–µ–∫—Ç—ã, —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –∏ —Ç.–¥.
}

export type HeroStatus = 'idle' | 'in_mission' | 'wounded' | 'dead';

export interface Hero {
  _id?: string;
  name: string;
  class: string;
  level: number;
  exp: number;
  skills?: string[]; // –ú–∞—Å—Å–∏–≤ –∞–π–¥–∏—à–Ω–∏–∫–æ–≤ –∏–ª–∏ –∏–º—ë–Ω –Ω–∞–≤—ã–∫–æ–≤
  talentTree?: Record<string, any>; // –û–±—ä–µ–∫—Ç –¥–µ—Ä–µ–≤–∞ —Ç–∞–ª–∞–Ω—Ç–æ–≤
  heroArmy: ArmyUnit[];  // –ê—Ä–º–∏—è –ø—Ä–∏ –≥–µ—Ä–æ–µ
  prestige: number;
  avatar?: string;
  luck?: number;
  currentMission?: string; // ObjectId –º–∏—Å—Å–∏–∏
  user?: string;           // ObjectId –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  createdAt?: string | Date;
  updatedAt?: string | Date;
  status: HeroStatus;
  isNFT?: boolean;
  nftTokenId?: string | null;
  bonuses?: HeroBonus;     // –°—É–º–º–∞—Ä–Ω—ã–µ –±–æ–Ω—É—Å—ã –≥–µ—Ä–æ—è
  inventory?: HeroInventoryItem[];
}
