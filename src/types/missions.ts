// üìÑ src/types/Mission.ts

import { ArmyUnit } from './Army';
import { Hero } from './Hero';
import { ResourceSub } from './Resource';

export type MissionStatus = 'active' | 'completed' | 'cancelled';

export interface MissionReward {
  resources: ResourceSub;
  items: any[]; // –ú–æ–∂–Ω–æ –æ–ø–∏—Å–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ, –µ—Å–ª–∏ –±—É–¥–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
  exp: number;
}

export interface MissionLog {
  // –õ—é–±–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ª–æ–≥–∞ (–Ω–∞–ø—Ä. —Å–æ–±—ã—Ç–∏–µ, –≤—Ä–µ–º—è, –ø–∞—Ä–∞–º–µ—Ç—Ä—ã)
  event: string;
  time: string;
  [key: string]: any;
}

export interface Mission {
  _id?: string;
  type: string; // –¢–∏–ø –º–∏—Å—Å–∏–∏ (resource, battle, scout, delivery)
  hero: string | Hero;
  army: ArmyUnit[];
  resourceNode?: string;   // ObjectId —Ç–æ—á–∫–∏
  user: string;
  startTime: string | Date;
  endTime: string | Date;
  status: MissionStatus;
  reward: MissionReward;
  missionProgress?: number;
  isCollectable?: boolean;
  logs?: MissionLog[];
  createdAt?: string | Date;
  updatedAt?: string | Date;
}
