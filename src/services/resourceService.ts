// üìÑ src/services/resourceService.ts
import { ResourceNode } from "@/types/Resource";
import { RESOURCE_LEVEL } from "@/config/RESOURCE_LEVEL";
import { RESOURCE_CONFIG } from "@/config/RESOURCE_CONFIG";

const AUTO_RESTORE_CHECK_INTERVAL = 10 * 60 * 1000; // 10 –º–∏–Ω—É—Ç
const AUTO_RESTORE_IDLE_DELAY = 4 * 60 * 60 * 1000; // 4 —á–∞—Å–∞

export function tryAutoRestoreResourceNode(node: ResourceNode): boolean {
  // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∞–≤—Ç–æ-–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ CONFIG (–ø–∞—Å–ø–æ—Ä—Ç —Ä–µ—Å—É—Ä—Å–∞)
  const resourceConfig = RESOURCE_CONFIG[node.resource as keyof typeof RESOURCE_CONFIG];
  if (!resourceConfig?.autoRestore) return false;

  if (node.activeHero) return false;
  if (!node.lastMiningTime) return false;

  // 2. –ë–µ—Ä—ë–º —É—Ä–æ–≤–µ–Ω—å —Ç–æ—á–∫–∏ –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —É—Ä–æ–≤–Ω—è
  const levels = RESOURCE_LEVEL[node.resource as keyof typeof RESOURCE_LEVEL];
  const level = node.level ?? 0;
  const levelConfig = levels[level];
  if (!levelConfig) return false;

  const now = Date.now();
  const idleTime = now - node.lastMiningTime;

  if (idleTime < AUTO_RESTORE_IDLE_DELAY) return false;

  // 3. –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ restoreTime
  const { totalAmount, restoreTime } = levelConfig;
  if (!restoreTime) return false;

  // –°—á–∏—Ç–∞–µ–º —Å–∫–æ–ª—å–∫–æ —Ü–∏–∫–ª–æ–≤ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—à–ª–æ
  const restoreCycles = Math.floor(idleTime / (restoreTime * 1000));
  if (restoreCycles <= 0) return false;

  // –ó–∞ –∫–∞–∂–¥—ã–π —Ü–∏–∫–ª –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º 1/3 totalAmount (–ø—Ä–∏–º–µ—Ä)
  const restoreAmount = Math.floor((totalAmount / 3) * restoreCycles);
  if (restoreAmount <= 0) return false;

  const newAmount = Math.min(node.currentAmount + restoreAmount, totalAmount);

  if (newAmount === node.currentAmount) return false;

  node.currentAmount = newAmount;
  node.lastMiningTime = now;

  if (node.currentAmount >= totalAmount) {
    node.isDepleted = false;
  }

  return true;
}
