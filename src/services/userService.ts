// üìÑ src/services/userService.ts

import UserModel from '@/models/UserModel';

type UpdateUserProfileArgs = {
  wallet: string,
  name?: string,
  avatar?: string,
  quote?: string
};

// –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –∫–æ—à–µ–ª—å–∫—É
export async function getUserByWallet(wallet: string) {
  return await UserModel.findOne({ wallet });
}

// –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∏–º—è, –∞–≤–∞—Ç–∞—Ä, —Ü–∏—Ç–∞—Ç–∞)
export async function updateUserProfile({ wallet, name, avatar, quote }: UpdateUserProfileArgs) {
  const user = await UserModel.findOneAndUpdate(
    { wallet },
    { $set: { name, avatar, quote } },
    { new: true }
  );
  return user;
}

// –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
export async function registerUserIfMissing(wallet: string) {
  let user = await UserModel.findOne({ wallet });
  if (!user) {
    user = new UserModel({ wallet, createdAt: new Date() });
    await user.save();
  }
  return user;
}
