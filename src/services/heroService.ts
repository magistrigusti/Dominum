// üìÑ src/services/heroService.ts

import HeroModel from '@/models/HeroModel';
import UserModel from '@/models/UserModel';
import HeroBaseStats from '@/config/heroes/HERO_BASE_STATS';
import HeroQualityConfig from '@/config/heroes/HERO_QUALITIES';
import { Types } from 'mongoose';

// –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ—Ö –≥–µ—Ä–æ–µ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export async function getUserHeroes(wallet: string) {
  const user = await UserModel.findOne({ wallet });
  if (!user) throw new Error('User not found');
  return await HeroModel.find({ owner: user._id });
}

// –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ –≥–µ—Ä–æ—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∑–∞ –∫–≤–µ—Å—Ç/–ø—Ä–∏–∑)
export async function createHero(wallet: string, heroData: any) {
  const user = await UserModel.findOne({ wallet });
  if (!user) throw new Error('User not found');

  // 1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–∏–º–∏—Ç—ã –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –≥–µ—Ä–æ–µ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –º–∞–∫—Å–∏–º—É–º 10)
  const heroCount = await HeroModel.countDocuments({ owner: user._id });
  if (heroCount >= 10) throw new Error('Maximum heroes reached');

  // 2. –ü–æ–ª—É—á–∏—Ç—å –±–∞–∑–æ–≤—ã–µ —Å—Ç–∞—Ç—ã –∏ –∫–∞—á–µ—Å—Ç–≤–æ
  const baseStats = HeroBaseStats(heroData.class, heroData.race, heroData.quality);
  const qualityConfig = HeroQualityConfig(heroData.quality);

  // 3. –°–æ–∑–¥–∞—Ç—å –≥–µ—Ä–æ—è
  const hero = new HeroModel({
    ...heroData,
    owner: user._id,
    level: 1,
    experience: 0,
    quality: heroData.quality,
    maxLevel: qualityConfig.maxLevel,
    stats: baseStats,
    equipment: [],
    createdAt: new Date(),
  });
  await hero.save();
  return hero.toObject();
}

// –û–±–Ω–æ–≤–∏—Ç—å –≥–µ—Ä–æ—è (—É—Ä–æ–≤–µ–Ω—å, –æ–ø—ã—Ç, —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ –∏ —Ç.–¥.)
export async function updateHero(wallet: string, heroId: string, updates: any) {
  const user = await UserModel.findOne({ wallet });
  if (!user) throw new Error('User not found');

  const hero = await HeroModel.findOne({ _id: heroId, owner: user._id });
  if (!hero) throw new Error('Hero not found');

  // –ü—Ä–∏–º–µ–Ω–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –∫ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–º –ø–æ–ª—è–º
  if (updates.level !== undefined) hero.level = updates.level;
  if (updates.experience !== undefined) hero.experience = updates.experience;
  if (updates.equipment !== undefined) hero.equipment = updates.equipment;
  if (updates.stats !== undefined) hero.stats = { ...hero.stats, ...updates.stats };

  await hero.save();
  return hero.toObject();
}
